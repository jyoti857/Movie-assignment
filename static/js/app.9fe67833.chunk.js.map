{"version":3,"sources":["src/Components/Card.js","src/Home.js","src/Details.js","App.js"],"names":["CustomCard","uri","movieTitle","onPress","style","year","type","Card","margin","Title","title","Cover","source","width","Content","Paragraph","useState","React","useEffect","styles","StyleSheet","create","container","marginTop","marginLeft","marginButtom","alignSelf","flex","backgroundColor","input","height","borderRadius","borderWidth","paddingLeft","color","button","alignContent","card","Home","navigation","data","setData","dataC","setDataC","flag","setFlag","searchValue","setSearchValue","a","async","fetch","response","json","result","Search","fetchMovies","elem","dataClone","length","filter","d","toLowerCase","includes","s","undefined","handleSearch","View","display","flexDirection","alignItems","TextInput","placeholder","value","label","onChangeText","text","ScrollView","contentContainerStyle","flexWrap","map","dc","horizontal","showsHorizontalScrollIndicator","Poster","navigate","Year","Type","imdbID","Details","route","params","Button","Stack","createStackNavigator","customTheme","DefaultTheme","colors","primary","accent","App","theme","NavigationContainer","Navigator","Group","screenOptions","headerShown","Screen","name","component","options","justifyContent"],"mappings":"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","file":"static/js/app.9fe67833.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Card, Title, Paragraph } from 'react-native-paper';\r\n\r\nconst CustomCard = ({uri, movieTitle, onPress, style, year, type}) => {\r\n\r\nreturn(\r\n    <Card style={{...style, margin: 10}} onPress = {onPress}>\r\n      <Card.Title title={movieTitle} \r\n       />\r\n      <Card.Cover source={{ uri }} style = {{width:190}} />\r\n      <Card.Content>\r\n        <Title>{movieTitle}</Title> \r\n        { year && <Paragraph>Year: {year}</Paragraph>}\r\n         { type && <Paragraph>Type: {type}</Paragraph>}\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CustomCard;","import * as React from 'react';\r\nimport { View, StyleSheet, ScrollView, TextInput } from \"react-native\";\r\nimport CustomCard from './Components/Card';\r\n\r\nconst {useState, useEffect} = React\r\nconst url = 'http://www.omdbapi.com/?apikey=b9bd48a6&s={Query}';\r\nfunction Home({navigation}){\r\n  const [data, setData] = useState([]);\r\n  const [dataC, setDataC] = useState([]);\r\n  const [flag, setFlag] = useState(false);\r\n  const [searchValue, setSearchValue] = useState()\r\n  useEffect(() => {\r\n    const fetchMovies = async() => {\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      setData(result?.Search)\r\n    }\r\n    fetchMovies();\r\n  }, []);\r\n  const handleSearch = (data, elem = '') => {\r\n    const dataClone = [...data]\r\n    const result = dataClone && dataClone.length>0 && dataClone.filter(d => d.Title.toLowerCase().includes(elem.toLowerCase()))\r\n    const s =  result.length > 0 ? result : [];\r\n    setDataC(s)\r\n    if(searchValue === '' || searchValue === undefined ){setDataC([])}\r\n  }\r\n  \r\n  const handleOnTextChange = (text) => {\r\n    setSearchValue(text)\r\n    setFlag(!flag)\r\n  }\r\n  useEffect(() => {\r\n    handleSearch(data, searchValue)\r\n  }, [flag])\r\n  return (\r\n    <View style  = {styles.container}>\r\n      <View style ={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n        <TextInput  \r\n          style = {styles.input} \r\n          placeholder='Search here by movie title' \r\n          value={searchValue}\r\n          label=\"Email\"\r\n          onChangeText={handleOnTextChange}\r\n        />\r\n        \r\n      </View>\r\n      <ScrollView contentContainerStyle = {{flexDirection: 'row', flexWrap: 'wrap', width: 440}} >\r\n      { \r\n         !searchValue ?  data && data.length > 0 && data.map((d) => <ScrollView \r\n         contentContainerStyle={{ backgroundColor: 'violet', flexWrap: 'wrap', width: 210, margin: 3,  display: 'flex',  flexDirection: 'row'}}\r\n         key = {d.imdbID} horizontal showsHorizontalScrollIndicator = {false} >\r\n            <CustomCard\r\n              style={styles.card} \r\n              uri = {d.Poster} movieTitle = {d.Title} \r\n              onPress = {() => navigation.navigate('Details', {uri: d.Poster, movieTitle: d.Title, year: d.Year, type: d.Type})}/> \r\n          </ScrollView>) : dataC && dataC.length > 0 && dataC.map((dc ) => <ScrollView \r\n          key = {dc.imdbID}\r\n          contentContainerStyle={{ backgroundColor: 'violet', flexWrap: 'wrap', width: 210, margin: 3,  display: 'flex',  flexDirection: 'row'}}\r\n          horizontal showsHorizontalScrollIndicator = {false}\r\n          >\r\n            <CustomCard uri = {dc.Poster} movieTitle = {dc.Title}   style={styles.card} \r\n            onPress = {() => navigation.navigate('Details', {uri: dc.Poster, movieTitle: dc.Title,  year: dc.Year, type: dc.Type})}/> \r\n          </ScrollView> )\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 40,\r\n    marginLeft: 160, \r\n    marginButtom: 100,\r\n    width: 600,\r\n    alignSelf: 'center',\r\n    flex:1,\r\n    backgroundColor: 'white'\r\n  },\r\n  input: {\r\n    marginTop: 30,\r\n    height: 30,\r\n    width: 400,\r\n    margin: 12,\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    paddingLeft: 4,\r\n    color: 'red'\r\n  },\r\n  button: {\r\n    width: 200,\r\n    alignContent: 'center'\r\n  },\r\n  card: {\r\n    flex: 1,\r\n    width: 300,\r\n    borderRadius: 20\r\n  }\r\n})\r\n\r\nexport default Home;","import * as React from 'react';\r\nimport { View, StyleSheet, ScrollView, TextInput } from \"react-native\";\r\nimport {Button} from 'react-native-paper'\r\nimport CustomCard from './Components/Card';\r\n\r\nexport default function Details({ navigation, route}){\r\n  const {uri, movieTitle, year, type} = route.params;\r\n  const onBackPress = () => {\r\n    navigation.navigate(\"Home\");\r\n  }\r\n  return(\r\n    <View>\r\n      <Button\r\n        style = {{marginTop: 40, marginLeft: 10, width: 100 }}\r\n        onPress={() => navigation.navigate('Home')}\r\n      >Back</Button>\r\n      <CustomCard \r\n        uri={uri} \r\n        movieTitle={movieTitle} \r\n        year = {year}\r\n        type = {type}\r\n        style = {styles.card}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    width: 400\r\n  }\r\n})","import 'react-native-gesture-handler'\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {NavigationContainer, StackRouter} from '@react-navigation/native'\nimport {createStackNavigator} from '@react-navigation/stack';\nimport Home from './src/Home';\nimport {DefaultTheme, Provider as PaperProvider} from 'react-native-paper'\nimport Details from './src/Details';\nconst Stack = createStackNavigator();\n\nconst config = {\n  animation: 'spring',\n  config: {\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n  },\n};\nconst customTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: 'tomato',\n    accent: 'yellow',\n  },\n};\n\nexport default function App() {\n  return (\n      <PaperProvider theme={customTheme}>\n        <NavigationContainer>\n          <Stack.Navigator >\n            <Stack.Group screenOptions={{headerShown: false}}>\n              <Stack.Screen \n                name=\"Home\"\n                component = {Home}\n                options = {{title: 'Home'}}\n              />\n              <Stack.Screen\n                name = \"Details\"\n                component={ Details }\n                options = {{title: 'Details'}}\n              />\n            </Stack.Group>\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    alignSelf: 'center',\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Card /> Card component 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "rgba(0, 0, 0, 0.12)",
      "borderRadius": 4,
      "elevation": 1,
      "margin": 10,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0.5,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 0.75,
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "flexGrow": 1,
        "flexShrink": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingLeft": 16,
          },
          Object {
            "minHeight": 50,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "center",
            },
          ]
        }
      />
      <View />
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#eeeeee",
            "height": 195,
            "overflow": "hidden",
          },
          undefined,
          undefined,
        ]
      }
    >
      <Image
        siblings={
          Array [
            "withTheme(Card.Title)",
            "withTheme(Card.Cover)",
            "Card.Content",
          ]
        }
        source={
          Object {
            "uri": undefined,
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "height": undefined,
              "justifyContent": "flex-end",
              "padding": 16,
              "width": undefined,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 16,
          },
          Object {
            "paddingBottom": 16,
          },
          undefined,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "System",
                "fontWeight": "500",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "fontSize": 20,
                  "letterSpacing": 0.15,
                  "lineHeight": 30,
                  "marginVertical": 2,
                },
                undefined,
              ],
            ],
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Card /> Movie type props 1`] = `
<View
  style={
    Object {
      "alignSelf": "center",
      "backgroundColor": "white",
      "flex": 1,
      "marginButtom": 100,
      "marginLeft": 160,
      "marginTop": 40,
      "width": 600,
    }
  }
>
  <View
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Go to Search 2
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <TextInput
      label="Email"
      onChangeText={[Function]}
      placeholder="Search here by movie title"
      style={
        Object {
          "borderWidth": 1,
          "height": 30,
          "margin": 12,
          "marginTop": 30,
          "padding": 4,
          "width": 500,
        }
      }
    />
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flex": 1,
        "flexDirection": "row",
        "flexWrap": "wrap",
      }
    }
    horizontal={true}
    showsHorizontalScrollIndicator={false}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`<Card /> works 1`] = `null`;
